ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.UART_Printf.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21              		.section	.text.UART_Printf,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	UART_Printf:
  28              	.LVL0:
  29              	.LFB73:
  30              		.file 1 "BSP/uart.c"
   1:BSP/uart.c    **** /*
   2:BSP/uart.c    **** 串口功能：接收到垃圾信息,停止电机，控制舵机进行分拣
   3:BSP/uart.c    **** 		 分拣完成恢复电机
   4:BSP/uart.c    **** */
   5:BSP/uart.c    **** #include "uart.h"
   6:BSP/uart.c    **** #include"servo.h"
   7:BSP/uart.c    **** #include "motor.h"
   8:BSP/uart.c    **** TaskHandle_t 			UartHandle;//串口任务句柄
   9:BSP/uart.c    **** SemaphoreHandle_t UARTPRINTF_SemaphoreHandle;//串口保护互斥量保护
  10:BSP/uart.c    **** 
  11:BSP/uart.c    **** uint8_t rxdat;
  12:BSP/uart.c    **** uint8_t rx_p;
  13:BSP/uart.c    **** uint8_t rxdata[10];
  14:BSP/uart.c    **** bool rxflag;
  15:BSP/uart.c    **** 
  16:BSP/uart.c    **** void Uart_Task(void *argument)
  17:BSP/uart.c    **** {
  18:BSP/uart.c    ****     Uart_Config();  // 初始化 UART
  19:BSP/uart.c    ****     UartPrintf("Uart_Task Uart_flag:%d", __HAL_UART_GET_FLAG(&huart1, UART_FLAG_RXNE));
  20:BSP/uart.c    **** 
  21:BSP/uart.c    ****     UART_INFO uartData;  // 创建 UART_INFO 结构体实例
  22:BSP/uart.c    **** 
  23:BSP/uart.c    ****     while(1)
  24:BSP/uart.c    ****     {
  25:BSP/uart.c    ****         if(rxflag == 1)  // 成功接收数据
  26:BSP/uart.c    ****         {
  27:BSP/uart.c    ****             SaveUartData(rxdata,&uartData);
  28:BSP/uart.c    ****             PrintUartData(&uartData);
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 2


  29:BSP/uart.c    **** 
  30:BSP/uart.c    ****             if (uartData.header == HEADER && uartData.footer == FOOTER)
  31:BSP/uart.c    ****             {
  32:BSP/uart.c    ****                 uint8_t calculatedChecksum = rxdata[1] | rxdata[2] | rxdata[3] | rxdata[4] | rxdata
  33:BSP/uart.c    **** 
  34:BSP/uart.c    ****                 if (calculatedChecksum == uartData.checksum)  // 校验通过进行相关设计
  35:BSP/uart.c    ****                 {
  36:BSP/uart.c    ****                     if(uartData.command == SERVO_COMMAND)//如果是舵机控制
  37:BSP/uart.c    ****                     {
  38:BSP/uart.c    ****                         uint8_t ID = uartData.info[0]; // 获取舵机 ID
  39:BSP/uart.c    ****                         int angle = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
  40:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
  41:BSP/uart.c    ****                         UartPrintf("Servo_ID: %d, angle: %d", ID, angle); // 打印舵机 ID 和角度
  42:BSP/uart.c    ****                     }
  43:BSP/uart.c    ****                     else if(uartData.command == MOTOR_COMMAND) // 如果是电机控制
  44:BSP/uart.c    ****                     {
  45:BSP/uart.c    ****                         uint8_t ID = uartData.info[0]; // 获取电机 ID
  46:BSP/uart.c    ****                         int speed = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
  47:BSP/uart.c    ****                         switch(ID)
  48:BSP/uart.c    ****                         {
  49:BSP/uart.c    ****                             case 1:
  50:BSP/uart.c    ****                                 PID_setMotorPoint(&motor1, (float)speed);
  51:BSP/uart.c    ****                                 break;
  52:BSP/uart.c    ****                             case 2:
  53:BSP/uart.c    ****                                 PID_setMotorPoint(&motor2, (float)speed);
  54:BSP/uart.c    ****                                 break;
  55:BSP/uart.c    ****                             case 3:
  56:BSP/uart.c    ****                                 PID_setMotorPoint(&motor3, (float)speed);
  57:BSP/uart.c    ****                                 break;
  58:BSP/uart.c    ****                             case 4:
  59:BSP/uart.c    ****                                 break;
  60:BSP/uart.c    ****                             default:
  61:BSP/uart.c    ****                                 break;
  62:BSP/uart.c    ****                         }
  63:BSP/uart.c    ****                         UartPrintf("Motor_ID: %d, speed: %d", ID, speed); // 打印电机 ID 和速度
  64:BSP/uart.c    ****                     }
  65:BSP/uart.c    ****                     else if(uartData.command == MOTOR_COMPSPEED_COMMAND)//占空比补偿控制
  66:BSP/uart.c    ****                     {
  67:BSP/uart.c    ****                         uint8_t ID = uartData.info[0]; // 获取电机 ID
  68:BSP/uart.c    ****                         int comp = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info[
  69:BSP/uart.c    ****                         switch(ID)
  70:BSP/uart.c    ****                         {
  71:BSP/uart.c    ****                             case 1:
  72:BSP/uart.c    ****                                 Motor_SetCompSpeed(&motor1, comp);
  73:BSP/uart.c    ****                                 break;
  74:BSP/uart.c    ****                             case 2:
  75:BSP/uart.c    ****                                 Motor_SetCompSpeed(&motor2, comp);
  76:BSP/uart.c    ****                                 break;
  77:BSP/uart.c    ****                             case 3:
  78:BSP/uart.c    ****                                 Motor_SetCompSpeed(&motor3, comp);
  79:BSP/uart.c    ****                                 break;
  80:BSP/uart.c    ****                             case 4:
  81:BSP/uart.c    ****                                 Motor_SetCompSpeed(&motor4, comp);
  82:BSP/uart.c    ****                                 break;
  83:BSP/uart.c    ****                             default:
  84:BSP/uart.c    ****                                 break;
  85:BSP/uart.c    ****                         }
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 3


  86:BSP/uart.c    ****                         UartPrintf("Motor_ID: %d, Compspeed: %d", ID, comp); // 打印电机 ID 和速度
  87:BSP/uart.c    ****                     }
  88:BSP/uart.c    ****                     else if(uartData.command == ACTION_COMMAND)
  89:BSP/uart.c    ****                     {
  90:BSP/uart.c    ****                         uint8_t action_id = uartData.info[0];
  91:BSP/uart.c    ****                         switch (action_id)
  92:BSP/uart.c    ****                         {
  93:BSP/uart.c    ****                             case 0:
  94:BSP/uart.c    ****                                 break;
  95:BSP/uart.c    ****                             case 1:
  96:BSP/uart.c    ****                                 break;
  97:BSP/uart.c    ****                             case 2:
  98:BSP/uart.c    ****                                 break;
  99:BSP/uart.c    ****                             case 3:
 100:BSP/uart.c    ****                                 break;
 101:BSP/uart.c    ****                         }
 102:BSP/uart.c    ****                         UartPrintf("Action:%d",action_id);
 103:BSP/uart.c    ****                     }
 104:BSP/uart.c    ****                     else if(uartData.command==RESETTIME_COMMAND)
 105:BSP/uart.c    ****                     {
 106:BSP/uart.c    ****                         uint8_t ID = uartData.info[0]; // 获取电机 ID
 107:BSP/uart.c    ****                         int timer = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 108:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 109:BSP/uart.c    ****                         uint16_t en = uartData.info[3] << 8 |uartData.info[4];
 110:BSP/uart.c    ****                         switch (ID)
 111:BSP/uart.c    ****                         {
 112:BSP/uart.c    ****                         case 1:
 113:BSP/uart.c    ****                             xTimerChangePeriod(xOneShotTimer1,timer,0);
 114:BSP/uart.c    ****                             motor1.ResetTime = timer;
 115:BSP/uart.c    ****                             break;
 116:BSP/uart.c    ****                         case 2:
 117:BSP/uart.c    ****                             xTimerChangePeriod(xOneShotTimer2,timer,0);
 118:BSP/uart.c    ****                             motor2.ResetTime = timer;
 119:BSP/uart.c    ****                             break;
 120:BSP/uart.c    ****                         case 3:
 121:BSP/uart.c    ****                             xTimerChangePeriod(xOneShotTimer3,timer,0);
 122:BSP/uart.c    ****                             motor3.ResetTime = timer;
 123:BSP/uart.c    ****                             break;
 124:BSP/uart.c    ****                         case 4://停止或开启全部电机
 125:BSP/uart.c    ****                             switch(time_id)
 126:BSP/uart.c    ****                             {
 127:BSP/uart.c    ****                                 case 1:
 128:BSP/uart.c    ****                                     if(en)
 129:BSP/uart.c    ****                                     {
 130:BSP/uart.c    ****                                         xTimerReset(xOneShotTimer1,0);
 131:BSP/uart.c    ****                                     }
 132:BSP/uart.c    ****                                     else
 133:BSP/uart.c    ****                                     {
 134:BSP/uart.c    ****                                         xTimerStop(xOneShotTimer1,0);
 135:BSP/uart.c    ****                                     }
 136:BSP/uart.c    ****                                     break;
 137:BSP/uart.c    ****                                 case 2:
 138:BSP/uart.c    ****                                     if(en)
 139:BSP/uart.c    ****                                     {
 140:BSP/uart.c    ****                                         xTimerReset(xOneShotTimer2,0);
 141:BSP/uart.c    ****                                     }
 142:BSP/uart.c    ****                                     else
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 4


 143:BSP/uart.c    ****                                     {
 144:BSP/uart.c    ****                                         xTimerStop(xOneShotTimer2,0);
 145:BSP/uart.c    ****                                     }
 146:BSP/uart.c    ****                                     break;
 147:BSP/uart.c    ****                                 case 3:
 148:BSP/uart.c    ****                                     if(en)
 149:BSP/uart.c    ****                                     {
 150:BSP/uart.c    ****                                         xTimerReset(xOneShotTimer3,0);
 151:BSP/uart.c    ****                                     }
 152:BSP/uart.c    ****                                     else
 153:BSP/uart.c    ****                                     {
 154:BSP/uart.c    ****                                         xTimerStop(xOneShotTimer3,0);
 155:BSP/uart.c    ****                                     }
 156:BSP/uart.c    ****                                     break;
 157:BSP/uart.c    ****                             }
 158:BSP/uart.c    ****                             break;
 159:BSP/uart.c    ****                         case 5:
 160:BSP/uart.c    ****                             switch (time_id)
 161:BSP/uart.c    ****                             {
 162:BSP/uart.c    ****                             case 1:
 163:BSP/uart.c    ****                                 xTimerChangePeriod(xOneShotTimer1,en,0);
 164:BSP/uart.c    ****                                 motor1.ResetTime = en;
 165:BSP/uart.c    ****                                 break;
 166:BSP/uart.c    ****                             case 2:
 167:BSP/uart.c    ****                                 xTimerChangePeriod(xOneShotTimer2,en,0);
 168:BSP/uart.c    ****                                 motor2.ResetTime = en;
 169:BSP/uart.c    ****                                 break;
 170:BSP/uart.c    ****                             case 3:
 171:BSP/uart.c    ****                                 xTimerChangePeriod(xOneShotTimer3,en,0);
 172:BSP/uart.c    ****                                 motor3.ResetTime = en;
 173:BSP/uart.c    ****                                 break;
 174:BSP/uart.c    ****                             default:
 175:BSP/uart.c    ****                                 break;
 176:BSP/uart.c    ****                             }
 177:BSP/uart.c    ****                         default:
 178:BSP/uart.c    ****                             break;
 179:BSP/uart.c    ****                         }
 180:BSP/uart.c    ****                         UartPrintf("ResetTime:%d %d %d",motor1.ResetTime,motor2.ResetTime,motor3.Re
 181:BSP/uart.c    ****                     }
 182:BSP/uart.c    ****                 }
 183:BSP/uart.c    ****                 else  // 校验失败返回失败信息
 184:BSP/uart.c    ****                 {
 185:BSP/uart.c    ****                     UartPrintf("Checksum error. Expected: 0x%02X, Received: 0x%02X\r\n", calculated
 186:BSP/uart.c    ****                 }
 187:BSP/uart.c    ****             }
 188:BSP/uart.c    ****             else
 189:BSP/uart.c    ****             {
 190:BSP/uart.c    ****                 UartPrintf("Invalid data format: Incorrect HEADER or FOOTER.\r\n");
 191:BSP/uart.c    ****             }
 192:BSP/uart.c    ****             rxflag = 0;
 193:BSP/uart.c    ****             Uart_Config();
 194:BSP/uart.c    ****         }
 195:BSP/uart.c    ****         vTaskDelay(pdMS_TO_TICKS(20));
 196:BSP/uart.c    ****     }
 197:BSP/uart.c    **** }
 198:BSP/uart.c    **** 
 199:BSP/uart.c    **** 
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 5


 200:BSP/uart.c    **** 
 201:BSP/uart.c    **** 
 202:BSP/uart.c    **** static void UART_Printf(char *strings){		//	可以用sprintf()进行封装
  31              		.loc 1 202 39 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 202 39 is_stmt 0 view .LVU1
  36 0000 70B5     		push	{r4, r5, r6, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43 0002 0446     		mov	r4, r0
 203:BSP/uart.c    **** 	xSemaphoreTake(UARTPRINTF_SemaphoreHandle,portMAX_DELAY);//用互斥量进行保护
  44              		.loc 1 203 2 is_stmt 1 view .LVU2
  45 0004 0E4D     		ldr	r5, .L3
  46 0006 4FF0FF31 		mov	r1, #-1
  47 000a 2868     		ldr	r0, [r5]
  48              	.LVL1:
  49              		.loc 1 203 2 is_stmt 0 view .LVU3
  50 000c FFF7FEFF 		bl	xQueueSemaphoreTake
  51              	.LVL2:
 204:BSP/uart.c    **** 	HAL_UART_Transmit(&_USART,strings,strlen(strings),strlen(strings));
  52              		.loc 1 204 2 is_stmt 1 view .LVU4
  53              		.loc 1 204 36 is_stmt 0 view .LVU5
  54 0010 2046     		mov	r0, r4
  55 0012 FFF7FEFF 		bl	strlen
  56              	.LVL3:
  57 0016 0346     		mov	r3, r0
  58              		.loc 1 204 2 view .LVU6
  59 0018 0A4E     		ldr	r6, .L3+4
  60 001a 82B2     		uxth	r2, r0
  61 001c 2146     		mov	r1, r4
  62 001e 3046     		mov	r0, r6
  63 0020 FFF7FEFF 		bl	HAL_UART_Transmit
  64              	.LVL4:
 205:BSP/uart.c    **** 	HAL_UART_Transmit(&_USART,"\r\n",2,2);
  65              		.loc 1 205 2 is_stmt 1 view .LVU7
  66 0024 0223     		movs	r3, #2
  67 0026 1A46     		mov	r2, r3
  68 0028 0749     		ldr	r1, .L3+8
  69 002a 3046     		mov	r0, r6
  70 002c FFF7FEFF 		bl	HAL_UART_Transmit
  71              	.LVL5:
 206:BSP/uart.c    **** 	xSemaphoreGive(UARTPRINTF_SemaphoreHandle);
  72              		.loc 1 206 2 view .LVU8
  73 0030 0023     		movs	r3, #0
  74 0032 1A46     		mov	r2, r3
  75 0034 1946     		mov	r1, r3
  76 0036 2868     		ldr	r0, [r5]
  77 0038 FFF7FEFF 		bl	xQueueGenericSend
  78              	.LVL6:
 207:BSP/uart.c    **** }
  79              		.loc 1 207 1 is_stmt 0 view .LVU9
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 6


  80 003c 70BD     		pop	{r4, r5, r6, pc}
  81              	.LVL7:
  82              	.L4:
  83              		.loc 1 207 1 view .LVU10
  84 003e 00BF     		.align	2
  85              	.L3:
  86 0040 00000000 		.word	.LANCHOR0
  87 0044 00000000 		.word	huart1
  88 0048 00000000 		.word	.LC0
  89              		.cfi_endproc
  90              	.LFE73:
  92              		.section	.text.UartPrintf,"ax",%progbits
  93              		.align	1
  94              		.global	UartPrintf
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  99              	UartPrintf:
 100              	.LVL8:
 101              	.LFB74:
 208:BSP/uart.c    **** 
 209:BSP/uart.c    **** int UartPrintf(const char *format,...) {
 102              		.loc 1 209 40 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 4, pretend = 16, frame = 72
 105              		@ frame_needed = 0, uses_anonymous_args = 1
 106              		.loc 1 209 40 is_stmt 0 view .LVU12
 107 0000 0FB4     		push	{r0, r1, r2, r3}
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 16
 110              		.cfi_offset 0, -16
 111              		.cfi_offset 1, -12
 112              		.cfi_offset 2, -8
 113              		.cfi_offset 3, -4
 114 0002 00B5     		push	{lr}
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 20
 117              		.cfi_offset 14, -20
 118 0004 93B0     		sub	sp, sp, #76
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 96
 121 0006 14AB     		add	r3, sp, #80
 122 0008 53F8042B 		ldr	r2, [r3], #4
 210:BSP/uart.c    ****        char buffer[64];
 123              		.loc 1 210 8 is_stmt 1 view .LVU13
 211:BSP/uart.c    ****        va_list args;
 124              		.loc 1 211 8 view .LVU14
 212:BSP/uart.c    ****        va_start(args, format);
 125              		.loc 1 212 8 view .LVU15
 126 000c 0193     		str	r3, [sp, #4]
 213:BSP/uart.c    ****        vsnprintf(buffer, sizeof(buffer), format, args);
 127              		.loc 1 213 8 view .LVU16
 128 000e 4021     		movs	r1, #64
 129 0010 02A8     		add	r0, sp, #8
 130 0012 FFF7FEFF 		bl	vsnprintf
 131              	.LVL9:
 214:BSP/uart.c    ****        va_end(args);
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 7


 132              		.loc 1 214 8 view .LVU17
 215:BSP/uart.c    ****        UART_Printf(buffer);
 133              		.loc 1 215 8 view .LVU18
 134 0016 02A8     		add	r0, sp, #8
 135 0018 FFF7FEFF 		bl	UART_Printf
 136              	.LVL10:
 216:BSP/uart.c    ****        return 0;
 137              		.loc 1 216 8 view .LVU19
 217:BSP/uart.c    **** }
 138              		.loc 1 217 1 is_stmt 0 view .LVU20
 139 001c 0020     		movs	r0, #0
 140 001e 13B0     		add	sp, sp, #76
 141              	.LCFI4:
 142              		.cfi_def_cfa_offset 20
 143              		@ sp needed
 144 0020 5DF804EB 		ldr	lr, [sp], #4
 145              	.LCFI5:
 146              		.cfi_restore 14
 147              		.cfi_def_cfa_offset 16
 148 0024 04B0     		add	sp, sp, #16
 149              	.LCFI6:
 150              		.cfi_restore 3
 151              		.cfi_restore 2
 152              		.cfi_restore 1
 153              		.cfi_restore 0
 154              		.cfi_def_cfa_offset 0
 155 0026 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE74:
 159              		.section	.text.Uart_Config,"ax",%progbits
 160              		.align	1
 161              		.global	Uart_Config
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	Uart_Config:
 167              	.LFB75:
 218:BSP/uart.c    **** 
 219:BSP/uart.c    **** 
 220:BSP/uart.c    **** void Uart_Config(void)
 221:BSP/uart.c    **** {
 168              		.loc 1 221 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 08B5     		push	{r3, lr}
 173              	.LCFI7:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 222:BSP/uart.c    **** 	HAL_UART_Receive_IT(&_USART,&rxdat,1);
 177              		.loc 1 222 2 view .LVU22
 178 0002 0122     		movs	r2, #1
 179 0004 0249     		ldr	r1, .L9
 180 0006 0348     		ldr	r0, .L9+4
 181 0008 FFF7FEFF 		bl	HAL_UART_Receive_IT
 182              	.LVL11:
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 8


 223:BSP/uart.c    **** }
 183              		.loc 1 223 1 is_stmt 0 view .LVU23
 184 000c 08BD     		pop	{r3, pc}
 185              	.L10:
 186 000e 00BF     		.align	2
 187              	.L9:
 188 0010 00000000 		.word	.LANCHOR1
 189 0014 00000000 		.word	huart1
 190              		.cfi_endproc
 191              	.LFE75:
 193              		.section	.text.Uart_Stop,"ax",%progbits
 194              		.align	1
 195              		.global	Uart_Stop
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	Uart_Stop:
 201              	.LFB76:
 224:BSP/uart.c    **** 
 225:BSP/uart.c    **** void Uart_Stop(void)
 226:BSP/uart.c    **** {
 202              		.loc 1 226 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 227:BSP/uart.c    **** 	__HAL_UART_DISABLE_IT(&_USART, UART_IT_RXNE);
 207              		.loc 1 227 2 view .LVU25
 208 0000 034B     		ldr	r3, .L12
 209 0002 1A68     		ldr	r2, [r3]
 210 0004 D368     		ldr	r3, [r2, #12]
 211 0006 23F02003 		bic	r3, r3, #32
 212 000a D360     		str	r3, [r2, #12]
 228:BSP/uart.c    **** }
 213              		.loc 1 228 1 is_stmt 0 view .LVU26
 214 000c 7047     		bx	lr
 215              	.L13:
 216 000e 00BF     		.align	2
 217              	.L12:
 218 0010 00000000 		.word	huart1
 219              		.cfi_endproc
 220              	.LFE76:
 222              		.section	.text.Uart_Start,"ax",%progbits
 223              		.align	1
 224              		.global	Uart_Start
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 229              	Uart_Start:
 230              	.LFB77:
 229:BSP/uart.c    **** 
 230:BSP/uart.c    **** void Uart_Start(void)
 231:BSP/uart.c    **** {
 231              		.loc 1 231 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 9


 235              		@ link register save eliminated.
 232:BSP/uart.c    **** 	__HAL_UART_ENABLE_IT(&_USART, UART_IT_RXNE);
 236              		.loc 1 232 2 view .LVU28
 237 0000 034B     		ldr	r3, .L15
 238 0002 1A68     		ldr	r2, [r3]
 239 0004 D368     		ldr	r3, [r2, #12]
 240 0006 43F02003 		orr	r3, r3, #32
 241 000a D360     		str	r3, [r2, #12]
 233:BSP/uart.c    **** }
 242              		.loc 1 233 1 is_stmt 0 view .LVU29
 243 000c 7047     		bx	lr
 244              	.L16:
 245 000e 00BF     		.align	2
 246              	.L15:
 247 0010 00000000 		.word	huart1
 248              		.cfi_endproc
 249              	.LFE77:
 251              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 252              		.align	1
 253              		.global	HAL_UART_RxCpltCallback
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	HAL_UART_RxCpltCallback:
 259              	.LVL12:
 260              	.LFB78:
 234:BSP/uart.c    **** 
 235:BSP/uart.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 236:BSP/uart.c    **** {
 261              		.loc 1 236 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 236 1 is_stmt 0 view .LVU31
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI8:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 237:BSP/uart.c    **** 	UBaseType_t uxSavedInterruptStatus; //关闭调度，保护串口
 271              		.loc 1 237 2 is_stmt 1 view .LVU32
 238:BSP/uart.c    **** 	uxSavedInterruptStatus = taskENTER_CRITICAL_FROM_ISR();
 272              		.loc 1 238 2 view .LVU33
 273              	.LBB6:
 274              	.LBI6:
 275              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 10


  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 11


  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 12


 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 13


 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 276              		.loc 2 207 34 view .LVU34
 277              	.LBB7:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 278              		.loc 2 209 1 view .LVU35
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 279              		.loc 2 211 2 view .LVU36
 280              		.syntax unified
 281              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 282 0002 EFF31184 			mrs r4, basepri											
 283 0006 4FF05003 		mov r3, #80												
 284 000a 83F31188 		msr basepri, r3											
 285 000e BFF36F8F 		isb														
 286 0012 BFF34F8F 		dsb														
 287              	
 288              	@ 0 "" 2
 289              	.LVL13:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 290              		.loc 2 223 2 view .LVU37
 291              		.loc 2 223 2 is_stmt 0 view .LVU38
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 14


 292              		.thumb
 293              		.syntax unified
 294              	.LBE7:
 295              	.LBE6:
 239:BSP/uart.c    **** 	if(huart->Instance == __USART)
 296              		.loc 1 239 2 is_stmt 1 view .LVU39
 297              		.loc 1 239 10 is_stmt 0 view .LVU40
 298 0016 0268     		ldr	r2, [r0]
 299              		.loc 1 239 4 view .LVU41
 300 0018 0E4B     		ldr	r3, .L23
 301 001a 9A42     		cmp	r2, r3
 302 001c 02D0     		beq	.L22
 303              	.LVL14:
 304              	.L18:
 240:BSP/uart.c    **** 	{
 241:BSP/uart.c    **** 		if(rxflag == 0)
 242:BSP/uart.c    **** 		{
 243:BSP/uart.c    **** 			rxdata[rx_p++] = rxdat;
 244:BSP/uart.c    **** 		}
 245:BSP/uart.c    **** 		if(rx_p >= DATA_LENGTH)
 246:BSP/uart.c    **** 		{
 247:BSP/uart.c    **** 			rxflag = 1;
 248:BSP/uart.c    **** 			rx_p = 0;
 249:BSP/uart.c    **** 		}
 250:BSP/uart.c    **** 		Uart_Config();
 251:BSP/uart.c    **** 	}
 252:BSP/uart.c    **** 	taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );
 305              		.loc 1 252 2 is_stmt 1 view .LVU42
 306              	.LBB8:
 307              	.LBI8:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 308              		.loc 2 227 30 view .LVU43
 309              	.LBB9:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 310              		.loc 2 229 2 view .LVU44
 311              		.syntax unified
 312              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 313 001e 84F31188 			msr basepri, r4	
 314              	@ 0 "" 2
 315              	.LVL15:
 316              		.loc 2 229 2 is_stmt 0 view .LVU45
 317              		.thumb
 318              		.syntax unified
 319              	.LBE9:
 320              	.LBE8:
 253:BSP/uart.c    **** }
 321              		.loc 1 253 1 view .LVU46
 322 0022 10BD     		pop	{r4, pc}
 323              	.LVL16:
 324              	.L22:
 241:BSP/uart.c    **** 		{
 325              		.loc 1 241 3 is_stmt 1 view .LVU47
 241:BSP/uart.c    **** 		{
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 15


 326              		.loc 1 241 13 is_stmt 0 view .LVU48
 327 0024 0C4B     		ldr	r3, .L23+4
 328 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 241:BSP/uart.c    **** 		{
 329              		.loc 1 241 5 view .LVU49
 330 0028 3BB9     		cbnz	r3, .L19
 243:BSP/uart.c    **** 		}
 331              		.loc 1 243 4 is_stmt 1 view .LVU50
 243:BSP/uart.c    **** 		}
 332              		.loc 1 243 15 is_stmt 0 view .LVU51
 333 002a 0C4A     		ldr	r2, .L23+8
 334 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 335 002e 591C     		adds	r1, r3, #1
 336 0030 1170     		strb	r1, [r2]
 243:BSP/uart.c    **** 		}
 337              		.loc 1 243 19 view .LVU52
 338 0032 0B4A     		ldr	r2, .L23+12
 339 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 340 0036 0B4A     		ldr	r2, .L23+16
 341 0038 D154     		strb	r1, [r2, r3]
 342              	.L19:
 245:BSP/uart.c    **** 		{
 343              		.loc 1 245 3 is_stmt 1 view .LVU53
 245:BSP/uart.c    **** 		{
 344              		.loc 1 245 11 is_stmt 0 view .LVU54
 345 003a 084B     		ldr	r3, .L23+8
 346 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245:BSP/uart.c    **** 		{
 347              		.loc 1 245 5 view .LVU55
 348 003e 082B     		cmp	r3, #8
 349 0040 05D9     		bls	.L20
 247:BSP/uart.c    **** 			rx_p = 0;
 350              		.loc 1 247 4 is_stmt 1 view .LVU56
 247:BSP/uart.c    **** 			rx_p = 0;
 351              		.loc 1 247 11 is_stmt 0 view .LVU57
 352 0042 054B     		ldr	r3, .L23+4
 353 0044 0122     		movs	r2, #1
 354 0046 1A70     		strb	r2, [r3]
 248:BSP/uart.c    **** 		}
 355              		.loc 1 248 4 is_stmt 1 view .LVU58
 248:BSP/uart.c    **** 		}
 356              		.loc 1 248 9 is_stmt 0 view .LVU59
 357 0048 044B     		ldr	r3, .L23+8
 358 004a 0022     		movs	r2, #0
 359 004c 1A70     		strb	r2, [r3]
 360              	.L20:
 250:BSP/uart.c    **** 	}
 361              		.loc 1 250 3 is_stmt 1 view .LVU60
 362 004e FFF7FEFF 		bl	Uart_Config
 363              	.LVL17:
 250:BSP/uart.c    **** 	}
 364              		.loc 1 250 3 is_stmt 0 view .LVU61
 365 0052 E4E7     		b	.L18
 366              	.L24:
 367              		.align	2
 368              	.L23:
 369 0054 00380140 		.word	1073821696
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 16


 370 0058 00000000 		.word	.LANCHOR2
 371 005c 00000000 		.word	.LANCHOR3
 372 0060 00000000 		.word	.LANCHOR1
 373 0064 00000000 		.word	.LANCHOR4
 374              		.cfi_endproc
 375              	.LFE78:
 377              		.section	.text.SaveUartData,"ax",%progbits
 378              		.align	1
 379              		.global	SaveUartData
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	SaveUartData:
 385              	.LVL18:
 386              	.LFB79:
 254:BSP/uart.c    **** 
 255:BSP/uart.c    **** /**
 256:BSP/uart.c    ****  * @brief 保存接收到的数据到 UART_INFO 结构体
 257:BSP/uart.c    ****  *
 258:BSP/uart.c    ****  * @param rxdata 接收到的字节数组
 259:BSP/uart.c    ****  * @param uartData 保存数据的 UART_INFO 结构体
 260:BSP/uart.c    ****  */
 261:BSP/uart.c    **** void SaveUartData(uint8_t *rxdata, UART_INFO *uartData)
 262:BSP/uart.c    **** {
 387              		.loc 1 262 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 263:BSP/uart.c    ****     uartData->header = rxdata[0];
 392              		.loc 1 263 5 view .LVU63
 393              		.loc 1 263 30 is_stmt 0 view .LVU64
 394 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 395              		.loc 1 263 22 view .LVU65
 396 0002 0B70     		strb	r3, [r1]
 264:BSP/uart.c    ****     uartData->command = rxdata[1];
 397              		.loc 1 264 5 is_stmt 1 view .LVU66
 398              		.loc 1 264 23 is_stmt 0 view .LVU67
 399 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 400 0006 4B70     		strb	r3, [r1, #1]
 265:BSP/uart.c    ****     uartData->info[0] = rxdata[2];
 401              		.loc 1 265 5 is_stmt 1 view .LVU68
 402              		.loc 1 265 23 is_stmt 0 view .LVU69
 403 0008 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 404 000a 8B70     		strb	r3, [r1, #2]
 266:BSP/uart.c    ****     uartData->info[1] = rxdata[3];
 405              		.loc 1 266 5 is_stmt 1 view .LVU70
 406              		.loc 1 266 23 is_stmt 0 view .LVU71
 407 000c C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 408 000e CB70     		strb	r3, [r1, #3]
 267:BSP/uart.c    ****     uartData->info[2] = rxdata[4];
 409              		.loc 1 267 5 is_stmt 1 view .LVU72
 410              		.loc 1 267 23 is_stmt 0 view .LVU73
 411 0010 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 412 0012 0B71     		strb	r3, [r1, #4]
 268:BSP/uart.c    ****     uartData->info[3] = rxdata[5];
 413              		.loc 1 268 5 is_stmt 1 view .LVU74
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 17


 414              		.loc 1 268 23 is_stmt 0 view .LVU75
 415 0014 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 416 0016 4B71     		strb	r3, [r1, #5]
 269:BSP/uart.c    ****     uartData->info[4] = rxdata[6];
 417              		.loc 1 269 5 is_stmt 1 view .LVU76
 418              		.loc 1 269 23 is_stmt 0 view .LVU77
 419 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 420 001a 8B71     		strb	r3, [r1, #6]
 270:BSP/uart.c    ****     uartData->checksum = rxdata[7];
 421              		.loc 1 270 5 is_stmt 1 view .LVU78
 422              		.loc 1 270 24 is_stmt 0 view .LVU79
 423 001c C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 424 001e CB71     		strb	r3, [r1, #7]
 271:BSP/uart.c    ****     uartData->footer = rxdata[8];
 425              		.loc 1 271 5 is_stmt 1 view .LVU80
 426              		.loc 1 271 22 is_stmt 0 view .LVU81
 427 0020 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 428 0022 0B72     		strb	r3, [r1, #8]
 272:BSP/uart.c    **** }
 429              		.loc 1 272 1 view .LVU82
 430 0024 7047     		bx	lr
 431              		.cfi_endproc
 432              	.LFE79:
 434              		.section	.rodata.PrintUartData.str1.4,"aMS",%progbits,1
 435              		.align	2
 436              	.LC1:
 437 0000 48656164 		.ascii	"Header: 0x%02X\015\012\000"
 437      65723A20 
 437      30782530 
 437      32580D0A 
 437      00
 438 0011 000000   		.align	2
 439              	.LC2:
 440 0014 436F6D6D 		.ascii	"Command: 0x%02X\015\012\000"
 440      616E643A 
 440      20307825 
 440      3032580D 
 440      0A00
 441 0026 0000     		.align	2
 442              	.LC3:
 443 0028 496E666F 		.ascii	"Info: 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\015\012\000"
 443      3A203078 
 443      25303258 
 443      20307825 
 443      30325820 
 444 0053 00       		.align	2
 445              	.LC4:
 446 0054 43686563 		.ascii	"Checksum: 0x%02X\015\012\000"
 446      6B73756D 
 446      3A203078 
 446      25303258 
 446      0D0A00
 447 0067 00       		.align	2
 448              	.LC5:
 449 0068 466F6F74 		.ascii	"Footer: 0x%02X\015\012\000"
 449      65723A20 
 449      30782530 
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 18


 449      32580D0A 
 449      00
 450              		.section	.text.PrintUartData,"ax",%progbits
 451              		.align	1
 452              		.global	PrintUartData
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	PrintUartData:
 458              	.LVL19:
 459              	.LFB80:
 273:BSP/uart.c    **** 
 274:BSP/uart.c    **** /**
 275:BSP/uart.c    ****  * @brief 打印 UART_INFO 结构体中的数据
 276:BSP/uart.c    ****  *
 277:BSP/uart.c    ****  * @param uartData 要打印的 UART_INFO 结构体
 278:BSP/uart.c    ****  */
 279:BSP/uart.c    **** void PrintUartData(const UART_INFO *uartData)
 280:BSP/uart.c    **** {
 460              		.loc 1 280 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		.loc 1 280 1 is_stmt 0 view .LVU84
 465 0000 10B5     		push	{r4, lr}
 466              	.LCFI9:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 470 0002 82B0     		sub	sp, sp, #8
 471              	.LCFI10:
 472              		.cfi_def_cfa_offset 16
 473 0004 0446     		mov	r4, r0
 281:BSP/uart.c    ****     UartPrintf("Header: 0x%02X\r\n", uartData->header);
 474              		.loc 1 281 5 is_stmt 1 view .LVU85
 475 0006 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 476 0008 0D48     		ldr	r0, .L28
 477              	.LVL20:
 478              		.loc 1 281 5 is_stmt 0 view .LVU86
 479 000a FFF7FEFF 		bl	UartPrintf
 480              	.LVL21:
 282:BSP/uart.c    ****     UartPrintf("Command: 0x%02X\r\n", uartData->command);
 481              		.loc 1 282 5 is_stmt 1 view .LVU87
 482 000e 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 483 0010 0C48     		ldr	r0, .L28+4
 484 0012 FFF7FEFF 		bl	UartPrintf
 485              	.LVL22:
 283:BSP/uart.c    ****     UartPrintf("Info: 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\r\n", uartData->info[0], uartData->info[1]
 486              		.loc 1 283 5 view .LVU88
 284:BSP/uart.c    ****                                                              uartData->info[2],uartData->info[3],ua
 487              		.loc 1 284 94 is_stmt 0 view .LVU89
 488 0016 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 489              		.loc 1 284 112 view .LVU90
 490 0018 A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 283:BSP/uart.c    ****     UartPrintf("Info: 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\r\n", uartData->info[0], uartData->info[1]
 491              		.loc 1 283 5 view .LVU91
 492 001a 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 19


 493 001c 0093     		str	r3, [sp]
 494 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 495 0020 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 496 0022 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 497 0024 0848     		ldr	r0, .L28+8
 498 0026 FFF7FEFF 		bl	UartPrintf
 499              	.LVL23:
 285:BSP/uart.c    ****     UartPrintf("Checksum: 0x%02X\r\n", uartData->checksum);
 500              		.loc 1 285 5 is_stmt 1 view .LVU92
 501 002a E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 502 002c 0748     		ldr	r0, .L28+12
 503 002e FFF7FEFF 		bl	UartPrintf
 504              	.LVL24:
 286:BSP/uart.c    ****     UartPrintf("Footer: 0x%02X\r\n", uartData->footer);
 505              		.loc 1 286 5 view .LVU93
 506 0032 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
 507 0034 0648     		ldr	r0, .L28+16
 508 0036 FFF7FEFF 		bl	UartPrintf
 509              	.LVL25:
 287:BSP/uart.c    **** }
 510              		.loc 1 287 1 is_stmt 0 view .LVU94
 511 003a 02B0     		add	sp, sp, #8
 512              	.LCFI11:
 513              		.cfi_def_cfa_offset 8
 514              		@ sp needed
 515 003c 10BD     		pop	{r4, pc}
 516              	.LVL26:
 517              	.L29:
 518              		.loc 1 287 1 view .LVU95
 519 003e 00BF     		.align	2
 520              	.L28:
 521 0040 00000000 		.word	.LC1
 522 0044 14000000 		.word	.LC2
 523 0048 28000000 		.word	.LC3
 524 004c 54000000 		.word	.LC4
 525 0050 68000000 		.word	.LC5
 526              		.cfi_endproc
 527              	.LFE80:
 529              		.section	.rodata.Uart_Task.str1.4,"aMS",%progbits,1
 530              		.align	2
 531              	.LC6:
 532 0000 55617274 		.ascii	"Uart_Task Uart_flag:%d\000"
 532      5F546173 
 532      6B205561 
 532      72745F66 
 532      6C61673A 
 533 0017 00       		.align	2
 534              	.LC7:
 535 0018 53657276 		.ascii	"Servo_ID: %d, angle: %d\000"
 535      6F5F4944 
 535      3A202564 
 535      2C20616E 
 535      676C653A 
 536              		.global	__aeabi_i2f
 537              		.align	2
 538              	.LC8:
 539 0030 4D6F746F 		.ascii	"Motor_ID: %d, speed: %d\000"
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 20


 539      725F4944 
 539      3A202564 
 539      2C207370 
 539      6565643A 
 540              		.align	2
 541              	.LC9:
 542 0048 4D6F746F 		.ascii	"Motor_ID: %d, Compspeed: %d\000"
 542      725F4944 
 542      3A202564 
 542      2C20436F 
 542      6D707370 
 543              		.align	2
 544              	.LC10:
 545 0064 41637469 		.ascii	"Action:%d\000"
 545      6F6E3A25 
 545      6400
 546 006e 0000     		.align	2
 547              	.LC11:
 548 0070 52657365 		.ascii	"ResetTime:%d %d %d\000"
 548      7454696D 
 548      653A2564 
 548      20256420 
 548      256400
 549 0083 00       		.align	2
 550              	.LC12:
 551 0084 43686563 		.ascii	"Checksum error. Expected: 0x%02X, Received: 0x%02X\015"
 551      6B73756D 
 551      20657272 
 551      6F722E20 
 551      45787065 
 552 00b7 0A00     		.ascii	"\012\000"
 553 00b9 000000   		.align	2
 554              	.LC13:
 555 00bc 496E7661 		.ascii	"Invalid data format: Incorrect HEADER or FOOTER.\015"
 555      6C696420 
 555      64617461 
 555      20666F72 
 555      6D61743A 
 556 00ed 0A00     		.ascii	"\012\000"
 557              		.section	.text.Uart_Task,"ax",%progbits
 558              		.align	1
 559              		.global	Uart_Task
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	Uart_Task:
 565              	.LVL27:
 566              	.LFB72:
  17:BSP/uart.c    ****     Uart_Config();  // 初始化 UART
 567              		.loc 1 17 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 16
 570              		@ frame_needed = 0, uses_anonymous_args = 0
  17:BSP/uart.c    ****     Uart_Config();  // 初始化 UART
 571              		.loc 1 17 1 is_stmt 0 view .LVU97
 572 0000 30B5     		push	{r4, r5, lr}
 573              	.LCFI12:
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 21


 574              		.cfi_def_cfa_offset 12
 575              		.cfi_offset 4, -12
 576              		.cfi_offset 5, -8
 577              		.cfi_offset 14, -4
 578 0002 87B0     		sub	sp, sp, #28
 579              	.LCFI13:
 580              		.cfi_def_cfa_offset 40
  18:BSP/uart.c    ****     UartPrintf("Uart_Task Uart_flag:%d", __HAL_UART_GET_FLAG(&huart1, UART_FLAG_RXNE));
 581              		.loc 1 18 5 is_stmt 1 view .LVU98
 582 0004 FFF7FEFF 		bl	Uart_Config
 583              	.LVL28:
  19:BSP/uart.c    **** 
 584              		.loc 1 19 5 view .LVU99
  19:BSP/uart.c    **** 
 585              		.loc 1 19 42 is_stmt 0 view .LVU100
 586 0008 944B     		ldr	r3, .L69
 587 000a 1B68     		ldr	r3, [r3]
 588 000c 1968     		ldr	r1, [r3]
  19:BSP/uart.c    **** 
 589              		.loc 1 19 5 view .LVU101
 590 000e C1F34011 		ubfx	r1, r1, #5, #1
 591 0012 9348     		ldr	r0, .L69+4
 592 0014 FFF7FEFF 		bl	UartPrintf
 593              	.LVL29:
 594 0018 49E1     		b	.L62
 595              	.LVL30:
 596              	.L65:
 597              	.LBB10:
 598              	.LBB11:
  38:BSP/uart.c    ****                         int angle = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 599              		.loc 1 38 25 is_stmt 1 view .LVU102
  38:BSP/uart.c    ****                         int angle = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 600              		.loc 1 38 33 is_stmt 0 view .LVU103
 601 001a 9DF80E50 		ldrb	r5, [sp, #14]	@ zero_extendqisi2
 602              	.LVL31:
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 603              		.loc 1 39 25 is_stmt 1 view .LVU104
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 604              		.loc 1 39 51 is_stmt 0 view .LVU105
 605 001e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 606              		.loc 1 39 77 view .LVU106
 607 0022 9DF81040 		ldrb	r4, [sp, #16]	@ zero_extendqisi2
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 608              		.loc 1 39 80 view .LVU107
 609 0026 2404     		lsls	r4, r4, #16
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 610              		.loc 1 39 62 view .LVU108
 611 0028 44EA0364 		orr	r4, r4, r3, lsl #24
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 612              		.loc 1 39 100 view .LVU109
 613 002c 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 614              		.loc 1 39 85 view .LVU110
 615 0030 44EA0324 		orr	r4, r4, r3, lsl #8
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 616              		.loc 1 39 122 view .LVU111
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 22


 617 0034 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
  39:BSP/uart.c    ****                         Servo_SetAngle(ID, (uint16_t)angle); // 调用设置角度的函数
 618              		.loc 1 39 29 view .LVU112
 619 0038 1C43     		orrs	r4, r4, r3
 620              	.LVL32:
  40:BSP/uart.c    ****                         UartPrintf("Servo_ID: %d, angle: %d", ID, angle); // 打印舵机 ID 和角度
 621              		.loc 1 40 25 is_stmt 1 view .LVU113
 622 003a A1B2     		uxth	r1, r4
 623              	.LVL33:
  40:BSP/uart.c    ****                         UartPrintf("Servo_ID: %d, angle: %d", ID, angle); // 打印舵机 ID 和角度
 624              		.loc 1 40 25 is_stmt 0 view .LVU114
 625 003c 2846     		mov	r0, r5
 626              	.LVL34:
  40:BSP/uart.c    ****                         UartPrintf("Servo_ID: %d, angle: %d", ID, angle); // 打印舵机 ID 和角度
 627              		.loc 1 40 25 view .LVU115
 628 003e FFF7FEFF 		bl	Servo_SetAngle
 629              	.LVL35:
  41:BSP/uart.c    ****                     }
 630              		.loc 1 41 25 is_stmt 1 view .LVU116
 631 0042 2246     		mov	r2, r4
 632 0044 2946     		mov	r1, r5
 633 0046 8748     		ldr	r0, .L69+8
 634 0048 FFF7FEFF 		bl	UartPrintf
 635              	.LVL36:
 636              	.LBE11:
 637 004c 27E1     		b	.L35
 638              	.LVL37:
 639              	.L66:
 640              	.LBB12:
  45:BSP/uart.c    ****                         int speed = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 641              		.loc 1 45 25 view .LVU117
  45:BSP/uart.c    ****                         int speed = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 642              		.loc 1 45 33 is_stmt 0 view .LVU118
 643 004e 9DF80E50 		ldrb	r5, [sp, #14]	@ zero_extendqisi2
 644              	.LVL38:
  46:BSP/uart.c    ****                         switch(ID)
 645              		.loc 1 46 25 is_stmt 1 view .LVU119
  46:BSP/uart.c    ****                         switch(ID)
 646              		.loc 1 46 51 is_stmt 0 view .LVU120
 647 0052 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
  46:BSP/uart.c    ****                         switch(ID)
 648              		.loc 1 46 77 view .LVU121
 649 0056 9DF81040 		ldrb	r4, [sp, #16]	@ zero_extendqisi2
  46:BSP/uart.c    ****                         switch(ID)
 650              		.loc 1 46 80 view .LVU122
 651 005a 2404     		lsls	r4, r4, #16
  46:BSP/uart.c    ****                         switch(ID)
 652              		.loc 1 46 62 view .LVU123
 653 005c 44EA0364 		orr	r4, r4, r3, lsl #24
  46:BSP/uart.c    ****                         switch(ID)
 654              		.loc 1 46 100 view .LVU124
 655 0060 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
  46:BSP/uart.c    ****                         switch(ID)
 656              		.loc 1 46 85 view .LVU125
 657 0064 44EA0324 		orr	r4, r4, r3, lsl #8
  46:BSP/uart.c    ****                         switch(ID)
 658              		.loc 1 46 122 view .LVU126
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 23


 659 0068 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
  46:BSP/uart.c    ****                         switch(ID)
 660              		.loc 1 46 29 view .LVU127
 661 006c 1C43     		orrs	r4, r4, r3
 662              	.LVL39:
  47:BSP/uart.c    ****                         {
 663              		.loc 1 47 25 is_stmt 1 view .LVU128
 664 006e 022D     		cmp	r5, #2
 665 0070 11D0     		beq	.L37
 666 0072 032D     		cmp	r5, #3
 667 0074 17D0     		beq	.L38
 668 0076 012D     		cmp	r5, #1
 669 0078 05D0     		beq	.L64
 670              	.LVL40:
 671              	.L39:
  63:BSP/uart.c    ****                     }
 672              		.loc 1 63 25 view .LVU129
 673 007a 2246     		mov	r2, r4
 674 007c 2946     		mov	r1, r5
 675 007e 7A48     		ldr	r0, .L69+12
 676 0080 FFF7FEFF 		bl	UartPrintf
 677              	.LVL41:
 678              	.LBE12:
 679 0084 0BE1     		b	.L35
 680              	.LVL42:
 681              	.L64:
 682              	.LBB13:
  50:BSP/uart.c    ****                                 break;
 683              		.loc 1 50 33 view .LVU130
 684 0086 2046     		mov	r0, r4
 685 0088 FFF7FEFF 		bl	__aeabi_i2f
 686              	.LVL43:
  50:BSP/uart.c    ****                                 break;
 687              		.loc 1 50 33 is_stmt 0 view .LVU131
 688 008c 0146     		mov	r1, r0
 689 008e 7748     		ldr	r0, .L69+16
 690 0090 FFF7FEFF 		bl	PID_setMotorPoint
 691              	.LVL44:
  51:BSP/uart.c    ****                             case 2:
 692              		.loc 1 51 33 is_stmt 1 view .LVU132
 693 0094 F1E7     		b	.L39
 694              	.LVL45:
 695              	.L37:
  53:BSP/uart.c    ****                                 break;
 696              		.loc 1 53 33 view .LVU133
 697 0096 2046     		mov	r0, r4
 698 0098 FFF7FEFF 		bl	__aeabi_i2f
 699              	.LVL46:
  53:BSP/uart.c    ****                                 break;
 700              		.loc 1 53 33 is_stmt 0 view .LVU134
 701 009c 0146     		mov	r1, r0
 702 009e 7448     		ldr	r0, .L69+20
 703 00a0 FFF7FEFF 		bl	PID_setMotorPoint
 704              	.LVL47:
  54:BSP/uart.c    ****                             case 3:
 705              		.loc 1 54 33 is_stmt 1 view .LVU135
 706 00a4 E9E7     		b	.L39
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 24


 707              	.LVL48:
 708              	.L38:
  56:BSP/uart.c    ****                                 break;
 709              		.loc 1 56 33 view .LVU136
 710 00a6 2046     		mov	r0, r4
 711 00a8 FFF7FEFF 		bl	__aeabi_i2f
 712              	.LVL49:
  56:BSP/uart.c    ****                                 break;
 713              		.loc 1 56 33 is_stmt 0 view .LVU137
 714 00ac 0146     		mov	r1, r0
 715 00ae 7148     		ldr	r0, .L69+24
 716 00b0 FFF7FEFF 		bl	PID_setMotorPoint
 717              	.LVL50:
  57:BSP/uart.c    ****                             case 4:
 718              		.loc 1 57 33 is_stmt 1 view .LVU138
 719 00b4 E1E7     		b	.L39
 720              	.LVL51:
 721              	.L67:
  57:BSP/uart.c    ****                             case 4:
 722              		.loc 1 57 33 is_stmt 0 view .LVU139
 723              	.LBE13:
 724              	.LBB14:
  67:BSP/uart.c    ****                         int comp = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info[
 725              		.loc 1 67 25 is_stmt 1 view .LVU140
  67:BSP/uart.c    ****                         int comp = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info[
 726              		.loc 1 67 33 is_stmt 0 view .LVU141
 727 00b6 9DF80E50 		ldrb	r5, [sp, #14]	@ zero_extendqisi2
 728              	.LVL52:
  68:BSP/uart.c    ****                         switch(ID)
 729              		.loc 1 68 25 is_stmt 1 view .LVU142
  68:BSP/uart.c    ****                         switch(ID)
 730              		.loc 1 68 50 is_stmt 0 view .LVU143
 731 00ba 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
  68:BSP/uart.c    ****                         switch(ID)
 732              		.loc 1 68 76 view .LVU144
 733 00be 9DF81040 		ldrb	r4, [sp, #16]	@ zero_extendqisi2
  68:BSP/uart.c    ****                         switch(ID)
 734              		.loc 1 68 79 view .LVU145
 735 00c2 2404     		lsls	r4, r4, #16
  68:BSP/uart.c    ****                         switch(ID)
 736              		.loc 1 68 61 view .LVU146
 737 00c4 44EA0364 		orr	r4, r4, r3, lsl #24
  68:BSP/uart.c    ****                         switch(ID)
 738              		.loc 1 68 99 view .LVU147
 739 00c8 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
  68:BSP/uart.c    ****                         switch(ID)
 740              		.loc 1 68 84 view .LVU148
 741 00cc 44EA0324 		orr	r4, r4, r3, lsl #8
  68:BSP/uart.c    ****                         switch(ID)
 742              		.loc 1 68 121 view .LVU149
 743 00d0 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
  68:BSP/uart.c    ****                         switch(ID)
 744              		.loc 1 68 29 view .LVU150
 745 00d4 1C43     		orrs	r4, r4, r3
 746              	.LVL53:
  69:BSP/uart.c    ****                         {
 747              		.loc 1 69 25 is_stmt 1 view .LVU151
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 25


 748 00d6 6B1E     		subs	r3, r5, #1
 749 00d8 032B     		cmp	r3, #3
 750 00da 07D8     		bhi	.L41
 751 00dc DFE803F0 		tbb	[pc, r3]
 752              	.L43:
 753 00e0 02       		.byte	(.L46-.L43)/2
 754 00e1 0C       		.byte	(.L45-.L43)/2
 755 00e2 11       		.byte	(.L44-.L43)/2
 756 00e3 16       		.byte	(.L42-.L43)/2
 757              		.p2align 1
 758              	.L46:
  72:BSP/uart.c    ****                                 break;
 759              		.loc 1 72 33 view .LVU152
 760 00e4 A1B2     		uxth	r1, r4
 761              	.LVL54:
  72:BSP/uart.c    ****                                 break;
 762              		.loc 1 72 33 is_stmt 0 view .LVU153
 763 00e6 6148     		ldr	r0, .L69+16
 764              	.LVL55:
  72:BSP/uart.c    ****                                 break;
 765              		.loc 1 72 33 view .LVU154
 766 00e8 FFF7FEFF 		bl	Motor_SetCompSpeed
 767              	.LVL56:
  73:BSP/uart.c    ****                             case 2:
 768              		.loc 1 73 33 is_stmt 1 view .LVU155
 769              	.L41:
  86:BSP/uart.c    ****                     }
 770              		.loc 1 86 25 view .LVU156
 771 00ec 2246     		mov	r2, r4
 772 00ee 2946     		mov	r1, r5
 773 00f0 6148     		ldr	r0, .L69+28
 774 00f2 FFF7FEFF 		bl	UartPrintf
 775              	.LVL57:
 776              	.LBE14:
 777 00f6 D2E0     		b	.L35
 778              	.LVL58:
 779              	.L45:
 780              	.LBB15:
  75:BSP/uart.c    ****                                 break;
 781              		.loc 1 75 33 view .LVU157
 782 00f8 A1B2     		uxth	r1, r4
 783              	.LVL59:
  75:BSP/uart.c    ****                                 break;
 784              		.loc 1 75 33 is_stmt 0 view .LVU158
 785 00fa 5D48     		ldr	r0, .L69+20
 786              	.LVL60:
  75:BSP/uart.c    ****                                 break;
 787              		.loc 1 75 33 view .LVU159
 788 00fc FFF7FEFF 		bl	Motor_SetCompSpeed
 789              	.LVL61:
  76:BSP/uart.c    ****                             case 3:
 790              		.loc 1 76 33 is_stmt 1 view .LVU160
 791 0100 F4E7     		b	.L41
 792              	.LVL62:
 793              	.L44:
  78:BSP/uart.c    ****                                 break;
 794              		.loc 1 78 33 view .LVU161
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 26


 795 0102 A1B2     		uxth	r1, r4
 796              	.LVL63:
  78:BSP/uart.c    ****                                 break;
 797              		.loc 1 78 33 is_stmt 0 view .LVU162
 798 0104 5B48     		ldr	r0, .L69+24
 799              	.LVL64:
  78:BSP/uart.c    ****                                 break;
 800              		.loc 1 78 33 view .LVU163
 801 0106 FFF7FEFF 		bl	Motor_SetCompSpeed
 802              	.LVL65:
  79:BSP/uart.c    ****                             case 4:
 803              		.loc 1 79 33 is_stmt 1 view .LVU164
 804 010a EFE7     		b	.L41
 805              	.LVL66:
 806              	.L42:
  81:BSP/uart.c    ****                                 break;
 807              		.loc 1 81 33 view .LVU165
 808 010c A1B2     		uxth	r1, r4
 809              	.LVL67:
  81:BSP/uart.c    ****                                 break;
 810              		.loc 1 81 33 is_stmt 0 view .LVU166
 811 010e 5B48     		ldr	r0, .L69+32
 812              	.LVL68:
  81:BSP/uart.c    ****                                 break;
 813              		.loc 1 81 33 view .LVU167
 814 0110 FFF7FEFF 		bl	Motor_SetCompSpeed
 815              	.LVL69:
  82:BSP/uart.c    ****                             default:
 816              		.loc 1 82 33 is_stmt 1 view .LVU168
 817 0114 EAE7     		b	.L41
 818              	.LVL70:
 819              	.L68:
  82:BSP/uart.c    ****                             default:
 820              		.loc 1 82 33 is_stmt 0 view .LVU169
 821              	.LBE15:
 822              	.LBB16:
  90:BSP/uart.c    ****                         switch (action_id)
 823              		.loc 1 90 25 is_stmt 1 view .LVU170
  91:BSP/uart.c    ****                         {
 824              		.loc 1 91 25 view .LVU171
 102:BSP/uart.c    ****                     }
 825              		.loc 1 102 25 view .LVU172
 826 0116 9DF80E10 		ldrb	r1, [sp, #14]	@ zero_extendqisi2
 827              	.LVL71:
 102:BSP/uart.c    ****                     }
 828              		.loc 1 102 25 is_stmt 0 view .LVU173
 829 011a 5948     		ldr	r0, .L69+36
 830              	.LVL72:
 102:BSP/uart.c    ****                     }
 831              		.loc 1 102 25 view .LVU174
 832 011c FFF7FEFF 		bl	UartPrintf
 833              	.LVL73:
 102:BSP/uart.c    ****                     }
 834              		.loc 1 102 25 view .LVU175
 835              	.LBE16:
 836 0120 BDE0     		b	.L35
 837              	.LVL74:
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 27


 838              	.L54:
 839              	.LBB17:
 113:BSP/uart.c    ****                             motor1.ResetTime = timer;
 840              		.loc 1 113 29 is_stmt 1 view .LVU176
 841 0122 0023     		movs	r3, #0
 842              	.LVL75:
 113:BSP/uart.c    ****                             motor1.ResetTime = timer;
 843              		.loc 1 113 29 is_stmt 0 view .LVU177
 844 0124 0093     		str	r3, [sp]
 845 0126 2246     		mov	r2, r4
 846              	.LVL76:
 113:BSP/uart.c    ****                             motor1.ResetTime = timer;
 847              		.loc 1 113 29 view .LVU178
 848 0128 0421     		movs	r1, #4
 849 012a 5648     		ldr	r0, .L69+40
 850              	.LVL77:
 113:BSP/uart.c    ****                             motor1.ResetTime = timer;
 851              		.loc 1 113 29 view .LVU179
 852 012c 0068     		ldr	r0, [r0]
 853 012e FFF7FEFF 		bl	xTimerGenericCommand
 854              	.LVL78:
 114:BSP/uart.c    ****                             break;
 855              		.loc 1 114 29 is_stmt 1 view .LVU180
 114:BSP/uart.c    ****                             break;
 856              		.loc 1 114 46 is_stmt 0 view .LVU181
 857 0132 4E4B     		ldr	r3, .L69+16
 858 0134 1C64     		str	r4, [r3, #64]
 115:BSP/uart.c    ****                         case 2:
 859              		.loc 1 115 29 is_stmt 1 view .LVU182
 860              	.LVL79:
 861              	.L48:
 180:BSP/uart.c    ****                     }
 862              		.loc 1 180 25 view .LVU183
 863 0136 4F4B     		ldr	r3, .L69+24
 864 0138 1B6C     		ldr	r3, [r3, #64]
 865 013a 4D4A     		ldr	r2, .L69+20
 866 013c 126C     		ldr	r2, [r2, #64]
 867 013e 4B49     		ldr	r1, .L69+16
 868 0140 096C     		ldr	r1, [r1, #64]
 869 0142 5148     		ldr	r0, .L69+44
 870 0144 FFF7FEFF 		bl	UartPrintf
 871              	.LVL80:
 872 0148 A9E0     		b	.L35
 873              	.LVL81:
 874              	.L53:
 117:BSP/uart.c    ****                             motor2.ResetTime = timer;
 875              		.loc 1 117 29 view .LVU184
 876 014a 0023     		movs	r3, #0
 877              	.LVL82:
 117:BSP/uart.c    ****                             motor2.ResetTime = timer;
 878              		.loc 1 117 29 is_stmt 0 view .LVU185
 879 014c 0093     		str	r3, [sp]
 880 014e 2246     		mov	r2, r4
 881              	.LVL83:
 117:BSP/uart.c    ****                             motor2.ResetTime = timer;
 882              		.loc 1 117 29 view .LVU186
 883 0150 0421     		movs	r1, #4
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 28


 884 0152 4E48     		ldr	r0, .L69+48
 885              	.LVL84:
 117:BSP/uart.c    ****                             motor2.ResetTime = timer;
 886              		.loc 1 117 29 view .LVU187
 887 0154 0068     		ldr	r0, [r0]
 888 0156 FFF7FEFF 		bl	xTimerGenericCommand
 889              	.LVL85:
 118:BSP/uart.c    ****                             break;
 890              		.loc 1 118 29 is_stmt 1 view .LVU188
 118:BSP/uart.c    ****                             break;
 891              		.loc 1 118 46 is_stmt 0 view .LVU189
 892 015a 454B     		ldr	r3, .L69+20
 893 015c 1C64     		str	r4, [r3, #64]
 119:BSP/uart.c    ****                         case 3:
 894              		.loc 1 119 29 is_stmt 1 view .LVU190
 895 015e EAE7     		b	.L48
 896              	.LVL86:
 897              	.L52:
 121:BSP/uart.c    ****                             motor3.ResetTime = timer;
 898              		.loc 1 121 29 view .LVU191
 899 0160 0023     		movs	r3, #0
 900              	.LVL87:
 121:BSP/uart.c    ****                             motor3.ResetTime = timer;
 901              		.loc 1 121 29 is_stmt 0 view .LVU192
 902 0162 0093     		str	r3, [sp]
 903 0164 2246     		mov	r2, r4
 904              	.LVL88:
 121:BSP/uart.c    ****                             motor3.ResetTime = timer;
 905              		.loc 1 121 29 view .LVU193
 906 0166 0421     		movs	r1, #4
 907 0168 4948     		ldr	r0, .L69+52
 908              	.LVL89:
 121:BSP/uart.c    ****                             motor3.ResetTime = timer;
 909              		.loc 1 121 29 view .LVU194
 910 016a 0068     		ldr	r0, [r0]
 911 016c FFF7FEFF 		bl	xTimerGenericCommand
 912              	.LVL90:
 122:BSP/uart.c    ****                             break;
 913              		.loc 1 122 29 is_stmt 1 view .LVU195
 122:BSP/uart.c    ****                             break;
 914              		.loc 1 122 46 is_stmt 0 view .LVU196
 915 0170 404B     		ldr	r3, .L69+24
 916 0172 1C64     		str	r4, [r3, #64]
 123:BSP/uart.c    ****                         case 4://停止或开启全部电机
 917              		.loc 1 123 29 is_stmt 1 view .LVU197
 918 0174 DFE7     		b	.L48
 919              	.LVL91:
 920              	.L51:
 125:BSP/uart.c    ****                             {
 921              		.loc 1 125 29 view .LVU198
 922 0176 022B     		cmp	r3, #2
 923 0178 19D0     		beq	.L55
 924 017a 032B     		cmp	r3, #3
 925 017c 2DD0     		beq	.L56
 926 017e 012B     		cmp	r3, #1
 927 0180 D9D1     		bne	.L48
 128:BSP/uart.c    ****                                     {
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 29


 928              		.loc 1 128 37 view .LVU199
 128:BSP/uart.c    ****                                     {
 929              		.loc 1 128 39 is_stmt 0 view .LVU200
 930 0182 5DB1     		cbz	r5, .L57
 130:BSP/uart.c    ****                                     }
 931              		.loc 1 130 41 is_stmt 1 view .LVU201
 932 0184 3F4B     		ldr	r3, .L69+40
 933              	.LVL92:
 130:BSP/uart.c    ****                                     }
 934              		.loc 1 130 41 is_stmt 0 view .LVU202
 935 0186 1C68     		ldr	r4, [r3]
 936              	.LVL93:
 130:BSP/uart.c    ****                                     }
 937              		.loc 1 130 41 view .LVU203
 938 0188 FFF7FEFF 		bl	xTaskGetTickCount
 939              	.LVL94:
 130:BSP/uart.c    ****                                     }
 940              		.loc 1 130 41 view .LVU204
 941 018c 0246     		mov	r2, r0
 942 018e 0023     		movs	r3, #0
 943 0190 0093     		str	r3, [sp]
 944 0192 0221     		movs	r1, #2
 945 0194 2046     		mov	r0, r4
 946 0196 FFF7FEFF 		bl	xTimerGenericCommand
 947              	.LVL95:
 948 019a CCE7     		b	.L48
 949              	.LVL96:
 950              	.L57:
 134:BSP/uart.c    ****                                     }
 951              		.loc 1 134 41 is_stmt 1 view .LVU205
 952 019c 0022     		movs	r2, #0
 953              	.LVL97:
 134:BSP/uart.c    ****                                     }
 954              		.loc 1 134 41 is_stmt 0 view .LVU206
 955 019e 0092     		str	r2, [sp]
 956 01a0 1346     		mov	r3, r2
 957              	.LVL98:
 134:BSP/uart.c    ****                                     }
 958              		.loc 1 134 41 view .LVU207
 959 01a2 0321     		movs	r1, #3
 960 01a4 3748     		ldr	r0, .L69+40
 961              	.LVL99:
 134:BSP/uart.c    ****                                     }
 962              		.loc 1 134 41 view .LVU208
 963 01a6 0068     		ldr	r0, [r0]
 964 01a8 FFF7FEFF 		bl	xTimerGenericCommand
 965              	.LVL100:
 134:BSP/uart.c    ****                                     }
 966              		.loc 1 134 41 view .LVU209
 967 01ac C3E7     		b	.L48
 968              	.LVL101:
 969              	.L55:
 138:BSP/uart.c    ****                                     {
 970              		.loc 1 138 37 is_stmt 1 view .LVU210
 138:BSP/uart.c    ****                                     {
 971              		.loc 1 138 39 is_stmt 0 view .LVU211
 972 01ae 5DB1     		cbz	r5, .L58
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 30


 140:BSP/uart.c    ****                                     }
 973              		.loc 1 140 41 is_stmt 1 view .LVU212
 974 01b0 364B     		ldr	r3, .L69+48
 975              	.LVL102:
 140:BSP/uart.c    ****                                     }
 976              		.loc 1 140 41 is_stmt 0 view .LVU213
 977 01b2 1C68     		ldr	r4, [r3]
 978              	.LVL103:
 140:BSP/uart.c    ****                                     }
 979              		.loc 1 140 41 view .LVU214
 980 01b4 FFF7FEFF 		bl	xTaskGetTickCount
 981              	.LVL104:
 140:BSP/uart.c    ****                                     }
 982              		.loc 1 140 41 view .LVU215
 983 01b8 0246     		mov	r2, r0
 984 01ba 0023     		movs	r3, #0
 985 01bc 0093     		str	r3, [sp]
 986 01be 0221     		movs	r1, #2
 987 01c0 2046     		mov	r0, r4
 988 01c2 FFF7FEFF 		bl	xTimerGenericCommand
 989              	.LVL105:
 990 01c6 B6E7     		b	.L48
 991              	.LVL106:
 992              	.L58:
 144:BSP/uart.c    ****                                     }
 993              		.loc 1 144 41 is_stmt 1 view .LVU216
 994 01c8 0022     		movs	r2, #0
 995              	.LVL107:
 144:BSP/uart.c    ****                                     }
 996              		.loc 1 144 41 is_stmt 0 view .LVU217
 997 01ca 0092     		str	r2, [sp]
 998 01cc 1346     		mov	r3, r2
 999              	.LVL108:
 144:BSP/uart.c    ****                                     }
 1000              		.loc 1 144 41 view .LVU218
 1001 01ce 0321     		movs	r1, #3
 1002 01d0 2E48     		ldr	r0, .L69+48
 1003              	.LVL109:
 144:BSP/uart.c    ****                                     }
 1004              		.loc 1 144 41 view .LVU219
 1005 01d2 0068     		ldr	r0, [r0]
 1006 01d4 FFF7FEFF 		bl	xTimerGenericCommand
 1007              	.LVL110:
 144:BSP/uart.c    ****                                     }
 1008              		.loc 1 144 41 view .LVU220
 1009 01d8 ADE7     		b	.L48
 1010              	.LVL111:
 1011              	.L56:
 148:BSP/uart.c    ****                                     {
 1012              		.loc 1 148 37 is_stmt 1 view .LVU221
 148:BSP/uart.c    ****                                     {
 1013              		.loc 1 148 39 is_stmt 0 view .LVU222
 1014 01da 5DB1     		cbz	r5, .L59
 150:BSP/uart.c    ****                                     }
 1015              		.loc 1 150 41 is_stmt 1 view .LVU223
 1016 01dc 2C4B     		ldr	r3, .L69+52
 1017              	.LVL112:
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 31


 150:BSP/uart.c    ****                                     }
 1018              		.loc 1 150 41 is_stmt 0 view .LVU224
 1019 01de 1C68     		ldr	r4, [r3]
 1020              	.LVL113:
 150:BSP/uart.c    ****                                     }
 1021              		.loc 1 150 41 view .LVU225
 1022 01e0 FFF7FEFF 		bl	xTaskGetTickCount
 1023              	.LVL114:
 150:BSP/uart.c    ****                                     }
 1024              		.loc 1 150 41 view .LVU226
 1025 01e4 0246     		mov	r2, r0
 1026 01e6 0023     		movs	r3, #0
 1027 01e8 0093     		str	r3, [sp]
 1028 01ea 0221     		movs	r1, #2
 1029 01ec 2046     		mov	r0, r4
 1030 01ee FFF7FEFF 		bl	xTimerGenericCommand
 1031              	.LVL115:
 1032 01f2 A0E7     		b	.L48
 1033              	.LVL116:
 1034              	.L59:
 154:BSP/uart.c    ****                                     }
 1035              		.loc 1 154 41 is_stmt 1 view .LVU227
 1036 01f4 0022     		movs	r2, #0
 1037              	.LVL117:
 154:BSP/uart.c    ****                                     }
 1038              		.loc 1 154 41 is_stmt 0 view .LVU228
 1039 01f6 0092     		str	r2, [sp]
 1040 01f8 1346     		mov	r3, r2
 1041              	.LVL118:
 154:BSP/uart.c    ****                                     }
 1042              		.loc 1 154 41 view .LVU229
 1043 01fa 0321     		movs	r1, #3
 1044 01fc 2448     		ldr	r0, .L69+52
 1045              	.LVL119:
 154:BSP/uart.c    ****                                     }
 1046              		.loc 1 154 41 view .LVU230
 1047 01fe 0068     		ldr	r0, [r0]
 1048 0200 FFF7FEFF 		bl	xTimerGenericCommand
 1049              	.LVL120:
 154:BSP/uart.c    ****                                     }
 1050              		.loc 1 154 41 view .LVU231
 1051 0204 97E7     		b	.L48
 1052              	.LVL121:
 1053              	.L49:
 160:BSP/uart.c    ****                             {
 1054              		.loc 1 160 29 is_stmt 1 view .LVU232
 1055 0206 022B     		cmp	r3, #2
 1056 0208 0ED0     		beq	.L60
 1057 020a 032B     		cmp	r3, #3
 1058 020c 17D0     		beq	.L61
 1059 020e 012B     		cmp	r3, #1
 1060 0210 91D1     		bne	.L48
 163:BSP/uart.c    ****                                 motor1.ResetTime = en;
 1061              		.loc 1 163 33 view .LVU233
 1062 0212 0023     		movs	r3, #0
 1063              	.LVL122:
 163:BSP/uart.c    ****                                 motor1.ResetTime = en;
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 32


 1064              		.loc 1 163 33 is_stmt 0 view .LVU234
 1065 0214 0093     		str	r3, [sp]
 1066 0216 2A46     		mov	r2, r5
 1067              	.LVL123:
 163:BSP/uart.c    ****                                 motor1.ResetTime = en;
 1068              		.loc 1 163 33 view .LVU235
 1069 0218 0421     		movs	r1, #4
 1070 021a 1A48     		ldr	r0, .L69+40
 1071              	.LVL124:
 163:BSP/uart.c    ****                                 motor1.ResetTime = en;
 1072              		.loc 1 163 33 view .LVU236
 1073 021c 0068     		ldr	r0, [r0]
 1074 021e FFF7FEFF 		bl	xTimerGenericCommand
 1075              	.LVL125:
 164:BSP/uart.c    ****                                 break;
 1076              		.loc 1 164 33 is_stmt 1 view .LVU237
 164:BSP/uart.c    ****                                 break;
 1077              		.loc 1 164 50 is_stmt 0 view .LVU238
 1078 0222 124B     		ldr	r3, .L69+16
 1079 0224 1D64     		str	r5, [r3, #64]
 165:BSP/uart.c    ****                             case 2:
 1080              		.loc 1 165 33 is_stmt 1 view .LVU239
 1081 0226 86E7     		b	.L48
 1082              	.LVL126:
 1083              	.L60:
 167:BSP/uart.c    ****                                 motor2.ResetTime = en;
 1084              		.loc 1 167 33 view .LVU240
 1085 0228 0023     		movs	r3, #0
 1086              	.LVL127:
 167:BSP/uart.c    ****                                 motor2.ResetTime = en;
 1087              		.loc 1 167 33 is_stmt 0 view .LVU241
 1088 022a 0093     		str	r3, [sp]
 1089 022c 2A46     		mov	r2, r5
 1090              	.LVL128:
 167:BSP/uart.c    ****                                 motor2.ResetTime = en;
 1091              		.loc 1 167 33 view .LVU242
 1092 022e 0421     		movs	r1, #4
 1093 0230 1648     		ldr	r0, .L69+48
 1094              	.LVL129:
 167:BSP/uart.c    ****                                 motor2.ResetTime = en;
 1095              		.loc 1 167 33 view .LVU243
 1096 0232 0068     		ldr	r0, [r0]
 1097 0234 FFF7FEFF 		bl	xTimerGenericCommand
 1098              	.LVL130:
 168:BSP/uart.c    ****                                 break;
 1099              		.loc 1 168 33 is_stmt 1 view .LVU244
 168:BSP/uart.c    ****                                 break;
 1100              		.loc 1 168 50 is_stmt 0 view .LVU245
 1101 0238 0D4B     		ldr	r3, .L69+20
 1102 023a 1D64     		str	r5, [r3, #64]
 169:BSP/uart.c    ****                             case 3:
 1103              		.loc 1 169 33 is_stmt 1 view .LVU246
 1104 023c 7BE7     		b	.L48
 1105              	.LVL131:
 1106              	.L61:
 171:BSP/uart.c    ****                                 motor3.ResetTime = en;
 1107              		.loc 1 171 33 view .LVU247
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 33


 1108 023e 0023     		movs	r3, #0
 1109              	.LVL132:
 171:BSP/uart.c    ****                                 motor3.ResetTime = en;
 1110              		.loc 1 171 33 is_stmt 0 view .LVU248
 1111 0240 0093     		str	r3, [sp]
 1112 0242 2A46     		mov	r2, r5
 1113              	.LVL133:
 171:BSP/uart.c    ****                                 motor3.ResetTime = en;
 1114              		.loc 1 171 33 view .LVU249
 1115 0244 0421     		movs	r1, #4
 1116 0246 1248     		ldr	r0, .L69+52
 1117              	.LVL134:
 171:BSP/uart.c    ****                                 motor3.ResetTime = en;
 1118              		.loc 1 171 33 view .LVU250
 1119 0248 0068     		ldr	r0, [r0]
 1120 024a FFF7FEFF 		bl	xTimerGenericCommand
 1121              	.LVL135:
 172:BSP/uart.c    ****                                 break;
 1122              		.loc 1 172 33 is_stmt 1 view .LVU251
 172:BSP/uart.c    ****                                 break;
 1123              		.loc 1 172 50 is_stmt 0 view .LVU252
 1124 024e 094B     		ldr	r3, .L69+24
 1125 0250 1D64     		str	r5, [r3, #64]
 173:BSP/uart.c    ****                             default:
 1126              		.loc 1 173 33 is_stmt 1 view .LVU253
 1127 0252 70E7     		b	.L48
 1128              	.LVL136:
 1129              	.L33:
 173:BSP/uart.c    ****                             default:
 1130              		.loc 1 173 33 is_stmt 0 view .LVU254
 1131              	.LBE17:
 185:BSP/uart.c    ****                 }
 1132              		.loc 1 185 21 is_stmt 1 view .LVU255
 1133 0254 0F48     		ldr	r0, .L69+56
 1134 0256 FFF7FEFF 		bl	UartPrintf
 1135              	.LVL137:
 185:BSP/uart.c    ****                 }
 1136              		.loc 1 185 21 is_stmt 0 view .LVU256
 1137 025a 20E0     		b	.L35
 1138              	.L70:
 1139              		.align	2
 1140              	.L69:
 1141 025c 00000000 		.word	huart1
 1142 0260 00000000 		.word	.LC6
 1143 0264 18000000 		.word	.LC7
 1144 0268 30000000 		.word	.LC8
 1145 026c 00000000 		.word	motor1
 1146 0270 00000000 		.word	motor2
 1147 0274 00000000 		.word	motor3
 1148 0278 48000000 		.word	.LC9
 1149 027c 00000000 		.word	motor4
 1150 0280 64000000 		.word	.LC10
 1151 0284 00000000 		.word	xOneShotTimer1
 1152 0288 70000000 		.word	.LC11
 1153 028c 00000000 		.word	xOneShotTimer2
 1154 0290 00000000 		.word	xOneShotTimer3
 1155 0294 84000000 		.word	.LC12
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 34


 1156              	.L32:
 185:BSP/uart.c    ****                 }
 1157              		.loc 1 185 21 view .LVU257
 1158              	.LBE10:
 190:BSP/uart.c    ****             }
 1159              		.loc 1 190 17 is_stmt 1 view .LVU258
 1160 0298 3348     		ldr	r0, .L71
 1161 029a FFF7FEFF 		bl	UartPrintf
 1162              	.LVL138:
 1163              	.L35:
 192:BSP/uart.c    ****             Uart_Config();
 1164              		.loc 1 192 13 view .LVU259
 192:BSP/uart.c    ****             Uart_Config();
 1165              		.loc 1 192 20 is_stmt 0 view .LVU260
 1166 029e 334B     		ldr	r3, .L71+4
 1167 02a0 0022     		movs	r2, #0
 1168 02a2 1A70     		strb	r2, [r3]
 193:BSP/uart.c    ****         }
 1169              		.loc 1 193 13 is_stmt 1 view .LVU261
 1170 02a4 FFF7FEFF 		bl	Uart_Config
 1171              	.LVL139:
 1172              	.L31:
 195:BSP/uart.c    ****     }
 1173              		.loc 1 195 9 view .LVU262
 1174 02a8 1420     		movs	r0, #20
 1175 02aa FFF7FEFF 		bl	vTaskDelay
 1176              	.LVL140:
  23:BSP/uart.c    ****     {
 1177              		.loc 1 23 10 view .LVU263
 1178              	.L62:
  21:BSP/uart.c    **** 
 1179              		.loc 1 21 5 view .LVU264
  23:BSP/uart.c    ****     {
 1180              		.loc 1 23 5 view .LVU265
  25:BSP/uart.c    ****         {
 1181              		.loc 1 25 9 view .LVU266
  25:BSP/uart.c    ****         {
 1182              		.loc 1 25 19 is_stmt 0 view .LVU267
 1183 02ae 2F4B     		ldr	r3, .L71+4
 1184 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  25:BSP/uart.c    ****         {
 1185              		.loc 1 25 11 view .LVU268
 1186 02b2 002B     		cmp	r3, #0
 1187 02b4 F8D0     		beq	.L31
  27:BSP/uart.c    ****             PrintUartData(&uartData);
 1188              		.loc 1 27 13 is_stmt 1 view .LVU269
 1189 02b6 03A9     		add	r1, sp, #12
 1190 02b8 2D48     		ldr	r0, .L71+8
 1191 02ba FFF7FEFF 		bl	SaveUartData
 1192              	.LVL141:
  28:BSP/uart.c    **** 
 1193              		.loc 1 28 13 view .LVU270
 1194 02be 03A8     		add	r0, sp, #12
 1195 02c0 FFF7FEFF 		bl	PrintUartData
 1196              	.LVL142:
  30:BSP/uart.c    ****             {
 1197              		.loc 1 30 13 view .LVU271
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 35


  30:BSP/uart.c    ****             {
 1198              		.loc 1 30 25 is_stmt 0 view .LVU272
 1199 02c4 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
  30:BSP/uart.c    ****             {
 1200              		.loc 1 30 16 view .LVU273
 1201 02c8 552B     		cmp	r3, #85
 1202 02ca E5D1     		bne	.L32
  30:BSP/uart.c    ****             {
 1203              		.loc 1 30 54 discriminator 1 view .LVU274
 1204 02cc 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
  30:BSP/uart.c    ****             {
 1205              		.loc 1 30 43 discriminator 1 view .LVU275
 1206 02d0 AA2B     		cmp	r3, #170
 1207 02d2 E1D1     		bne	.L32
 1208              	.LBB19:
  32:BSP/uart.c    **** 
 1209              		.loc 1 32 17 is_stmt 1 view .LVU276
  32:BSP/uart.c    **** 
 1210              		.loc 1 32 52 is_stmt 0 view .LVU277
 1211 02d4 264B     		ldr	r3, .L71+8
 1212 02d6 93F801E0 		ldrb	lr, [r3, #1]	@ zero_extendqisi2
  32:BSP/uart.c    **** 
 1213              		.loc 1 32 64 view .LVU278
 1214 02da 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
  32:BSP/uart.c    **** 
 1215              		.loc 1 32 76 view .LVU279
 1216 02dc 93F803C0 		ldrb	ip, [r3, #3]	@ zero_extendqisi2
  32:BSP/uart.c    **** 
 1217              		.loc 1 32 88 view .LVU280
 1218 02e0 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
  32:BSP/uart.c    **** 
 1219              		.loc 1 32 100 view .LVU281
 1220 02e2 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
  32:BSP/uart.c    **** 
 1221              		.loc 1 32 112 view .LVU282
 1222 02e4 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
  32:BSP/uart.c    **** 
 1223              		.loc 1 32 25 view .LVU283
 1224 02e6 4EEA0403 		orr	r3, lr, r4
 1225 02ea 4CEA0303 		orr	r3, ip, r3
 1226 02ee 0343     		orrs	r3, r3, r0
 1227 02f0 1343     		orrs	r3, r3, r2
 1228 02f2 1943     		orrs	r1, r1, r3
 1229              	.LVL143:
  34:BSP/uart.c    ****                 {
 1230              		.loc 1 34 17 is_stmt 1 view .LVU284
  34:BSP/uart.c    ****                 {
 1231              		.loc 1 34 51 is_stmt 0 view .LVU285
 1232 02f4 9DF81320 		ldrb	r2, [sp, #19]	@ zero_extendqisi2
  34:BSP/uart.c    ****                 {
 1233              		.loc 1 34 20 view .LVU286
 1234 02f8 8A42     		cmp	r2, r1
 1235 02fa ABD1     		bne	.L33
  36:BSP/uart.c    ****                     {
 1236              		.loc 1 36 21 is_stmt 1 view .LVU287
  36:BSP/uart.c    ****                     {
 1237              		.loc 1 36 32 is_stmt 0 view .LVU288
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 36


 1238 02fc 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
  36:BSP/uart.c    ****                     {
 1239              		.loc 1 36 23 view .LVU289
 1240 0300 012B     		cmp	r3, #1
 1241 0302 3FF48AAE 		beq	.L65
  43:BSP/uart.c    ****                     {
 1242              		.loc 1 43 26 is_stmt 1 view .LVU290
  43:BSP/uart.c    ****                     {
 1243              		.loc 1 43 28 is_stmt 0 view .LVU291
 1244 0306 022B     		cmp	r3, #2
 1245 0308 3FF4A1AE 		beq	.L66
  65:BSP/uart.c    ****                     {
 1246              		.loc 1 65 26 is_stmt 1 view .LVU292
  65:BSP/uart.c    ****                     {
 1247              		.loc 1 65 28 is_stmt 0 view .LVU293
 1248 030c 032B     		cmp	r3, #3
 1249 030e 3FF4D2AE 		beq	.L67
  88:BSP/uart.c    ****                     {
 1250              		.loc 1 88 26 is_stmt 1 view .LVU294
  88:BSP/uart.c    ****                     {
 1251              		.loc 1 88 28 is_stmt 0 view .LVU295
 1252 0312 042B     		cmp	r3, #4
 1253 0314 3FF4FFAE 		beq	.L68
 104:BSP/uart.c    ****                     {
 1254              		.loc 1 104 26 is_stmt 1 view .LVU296
 104:BSP/uart.c    ****                     {
 1255              		.loc 1 104 28 is_stmt 0 view .LVU297
 1256 0318 052B     		cmp	r3, #5
 1257 031a C0D1     		bne	.L35
 1258              	.LBB18:
 106:BSP/uart.c    ****                         int timer = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 1259              		.loc 1 106 25 is_stmt 1 view .LVU298
 106:BSP/uart.c    ****                         int timer = (uartData.info[1] << 24) | uartData.info[2]<<16 | uartData.info
 1260              		.loc 1 106 33 is_stmt 0 view .LVU299
 1261 031c 9DF80E20 		ldrb	r2, [sp, #14]	@ zero_extendqisi2
 1262              	.LVL144:
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1263              		.loc 1 107 25 is_stmt 1 view .LVU300
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1264              		.loc 1 107 51 is_stmt 0 view .LVU301
 1265 0320 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1266              		.loc 1 107 77 view .LVU302
 1267 0324 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1268              		.loc 1 107 80 view .LVU303
 1269 0328 1C04     		lsls	r4, r3, #16
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1270              		.loc 1 107 62 view .LVU304
 1271 032a 44EA0064 		orr	r4, r4, r0, lsl #24
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1272              		.loc 1 107 100 view .LVU305
 1273 032e 9DF81150 		ldrb	r5, [sp, #17]	@ zero_extendqisi2
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1274              		.loc 1 107 85 view .LVU306
 1275 0332 44EA0524 		orr	r4, r4, r5, lsl #8
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 37


 1276              		.loc 1 107 122 view .LVU307
 1277 0336 9DF81210 		ldrb	r1, [sp, #18]	@ zero_extendqisi2
 1278              	.LVL145:
 107:BSP/uart.c    ****                         uint16_t time_id = uartData.info[1] << 8 |uartData.info[2];
 1279              		.loc 1 107 29 view .LVU308
 1280 033a 0C43     		orrs	r4, r4, r1
 1281              	.LVL146:
 108:BSP/uart.c    ****                         uint16_t en = uartData.info[3] << 8 |uartData.info[4];
 1282              		.loc 1 108 25 is_stmt 1 view .LVU309
 108:BSP/uart.c    ****                         uint16_t en = uartData.info[3] << 8 |uartData.info[4];
 1283              		.loc 1 108 66 is_stmt 0 view .LVU310
 1284 033c 43EA0023 		orr	r3, r3, r0, lsl #8
 1285 0340 1BB2     		sxth	r3, r3
 1286              	.LVL147:
 109:BSP/uart.c    ****                         switch (ID)
 1287              		.loc 1 109 25 is_stmt 1 view .LVU311
 109:BSP/uart.c    ****                         switch (ID)
 1288              		.loc 1 109 34 is_stmt 0 view .LVU312
 1289 0342 41EA0525 		orr	r5, r1, r5, lsl #8
 1290              	.LVL148:
 110:BSP/uart.c    ****                         {
 1291              		.loc 1 110 25 is_stmt 1 view .LVU313
 1292 0346 013A     		subs	r2, r2, #1
 1293              	.LVL149:
 110:BSP/uart.c    ****                         {
 1294              		.loc 1 110 25 is_stmt 0 view .LVU314
 1295 0348 042A     		cmp	r2, #4
 1296 034a 3FF6F4AE 		bhi	.L48
 1297 034e 01A1     		adr	r1, .L50
 1298 0350 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 1299              		.p2align 2
 1300              	.L50:
 1301 0354 23010000 		.word	.L54+1
 1302 0358 4B010000 		.word	.L53+1
 1303 035c 61010000 		.word	.L52+1
 1304 0360 77010000 		.word	.L51+1
 1305 0364 07020000 		.word	.L49+1
 1306              		.p2align 1
 1307              	.L72:
 1308              		.align	2
 1309              	.L71:
 1310 0368 BC000000 		.word	.LC13
 1311 036c 00000000 		.word	.LANCHOR2
 1312 0370 00000000 		.word	.LANCHOR4
 1313              	.LBE18:
 1314              	.LBE19:
 1315              		.cfi_endproc
 1316              	.LFE72:
 1318              		.global	rxflag
 1319              		.global	rxdata
 1320              		.global	rx_p
 1321              		.global	rxdat
 1322              		.global	UARTPRINTF_SemaphoreHandle
 1323              		.global	UartHandle
 1324              		.section	.bss.UARTPRINTF_SemaphoreHandle,"aw",%nobits
 1325              		.align	2
 1326              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 38


 1329              	UARTPRINTF_SemaphoreHandle:
 1330 0000 00000000 		.space	4
 1331              		.section	.bss.UartHandle,"aw",%nobits
 1332              		.align	2
 1335              	UartHandle:
 1336 0000 00000000 		.space	4
 1337              		.section	.bss.rx_p,"aw",%nobits
 1338              		.set	.LANCHOR3,. + 0
 1341              	rx_p:
 1342 0000 00       		.space	1
 1343              		.section	.bss.rxdat,"aw",%nobits
 1344              		.set	.LANCHOR1,. + 0
 1347              	rxdat:
 1348 0000 00       		.space	1
 1349              		.section	.bss.rxdata,"aw",%nobits
 1350              		.align	2
 1351              		.set	.LANCHOR4,. + 0
 1354              	rxdata:
 1355 0000 00000000 		.space	10
 1355      00000000 
 1355      0000
 1356              		.section	.bss.rxflag,"aw",%nobits
 1357              		.set	.LANCHOR2,. + 0
 1360              	rxflag:
 1361 0000 00       		.space	1
 1362              		.text
 1363              	.Letext0:
 1364              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1365              		.file 4 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1366              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1367              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1368              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1369              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1370              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1371              		.file 10 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi
 1372              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1373              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1374              		.file 13 "Core/Inc/usart.h"
 1375              		.file 14 "BSP/uart.h"
 1376              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1377              		.file 16 "BSP/pid.h"
 1378              		.file 17 "BSP/motor.h"
 1379              		.file 18 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 1380              		.file 19 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 1381              		.file 20 "BSP/servo.h"
 1382              		.file 21 "<built-in>"
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:18     .rodata.UART_Printf.str1.4:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:22     .text.UART_Printf:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:27     .text.UART_Printf:00000000 UART_Printf
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:86     .text.UART_Printf:00000040 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:93     .text.UartPrintf:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:99     .text.UartPrintf:00000000 UartPrintf
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:160    .text.Uart_Config:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:166    .text.Uart_Config:00000000 Uart_Config
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:188    .text.Uart_Config:00000010 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:194    .text.Uart_Stop:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:200    .text.Uart_Stop:00000000 Uart_Stop
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:218    .text.Uart_Stop:00000010 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:223    .text.Uart_Start:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:229    .text.Uart_Start:00000000 Uart_Start
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:247    .text.Uart_Start:00000010 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:252    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:258    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:369    .text.HAL_UART_RxCpltCallback:00000054 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:378    .text.SaveUartData:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:384    .text.SaveUartData:00000000 SaveUartData
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:435    .rodata.PrintUartData.str1.4:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:451    .text.PrintUartData:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:457    .text.PrintUartData:00000000 PrintUartData
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:521    .text.PrintUartData:00000040 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:530    .rodata.Uart_Task.str1.4:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:558    .text.Uart_Task:00000000 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:564    .text.Uart_Task:00000000 Uart_Task
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:753    .text.Uart_Task:000000e0 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:757    .text.Uart_Task:000000e4 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1141   .text.Uart_Task:0000025c $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1160   .text.Uart_Task:00000298 $t
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1301   .text.Uart_Task:00000354 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1310   .text.Uart_Task:00000368 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1360   .bss.rxflag:00000000 rxflag
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1354   .bss.rxdata:00000000 rxdata
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1341   .bss.rx_p:00000000 rx_p
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1347   .bss.rxdat:00000000 rxdat
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1329   .bss.UARTPRINTF_SemaphoreHandle:00000000 UARTPRINTF_SemaphoreHandle
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1335   .bss.UartHandle:00000000 UartHandle
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1325   .bss.UARTPRINTF_SemaphoreHandle:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1332   .bss.UartHandle:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1342   .bss.rx_p:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1348   .bss.rxdat:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1350   .bss.rxdata:00000000 $d
C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s:1361   .bss.rxflag:00000000 $d

UNDEFINED SYMBOLS
xQueueSemaphoreTake
strlen
HAL_UART_Transmit
xQueueGenericSend
huart1
vsnprintf
HAL_UART_Receive_IT
__aeabi_i2f
ARM GAS  C:\Users\tre\AppData\Local\Temp\ccYt8ZC2.s 			page 40


Servo_SetAngle
PID_setMotorPoint
Motor_SetCompSpeed
xTimerGenericCommand
xTaskGetTickCount
motor1
motor2
motor3
motor4
xOneShotTimer1
xOneShotTimer2
xOneShotTimer3
vTaskDelay
